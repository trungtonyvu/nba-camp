#Our First Mongo Commands
"Mongod" - starts daemon in order to use Mongo; use separate terminal
"Mongo" - opens the shell; quit with ctrl+C
"help"
"show dbs" - show all databases
"use ''" - use one of those dbs; also use to create a new dbs and then use
"show collections"

insert - create something (object)
find - find or retrieve it
update - update or edit it
remove - remove it

CRUD
    Create, Read, Update, Destroy
    
    
What is Mongoose?
    Helps us interact with MongoDB inside our Javascript files
    Makes easier to interact with our MongoDB; Not necessary
    ODM - Object Data Mapper
        Way to write js in our js files (app.js/express files)
        That code will interact with our database
        
        
RESTful ROUTES (pattern of routes we can follow)
name      url       HTTP verb  description of what it does                                  Mongoose Method
========================================================================================================================================
A-INDEX    /dogs          GET     display a list of all dogs                                    Dog.find()
B-NEW      /dogs/new      GET     displays form to make a new dog\                                  N/A
B-CREATE   /dogs          POST    add new dog to DB                                             Dog.create()
C-SHOW     /dogs/:id      GET     shows info about one dog                                      Dog.findById()
            
D-EDIT     /dogs/:id/edit GET     show edit form for one dog                                    Dog.findById()
D-UPDATE   /dogs/:id      PUT     update a particular dog, then redirect somewhere              Dog.findByIdAndUpdate()
E-DESTROY  /dogs/:id      DELETE  delete a particular dog, then redirect somewhere              Dog.findByIdAndDestroy()

db.collection.drop() - drop everything in the DB


REST - a mapping between HTTP routes and CRUD

CREATE
READ     /allBlogs
UPDATE   /updateBlog/:id
DESTROY  /destroyBlog/:id

npm init
npm install express mongoose body-parser --save
npm install ejs --save
mkdir views
touch views/index

npm install method-override --save

npm install express-sanitizer --save


npm install method-override --save


CREATING COMMENTS

INDEX  /campgrounds
NEW    /campgrounds/new
CREATE /campgrounds/
SHOW   /campgrounds/:id

NEW    campgrounds/:id/comments/new     GET
CREATE campgrounds/:id/comments         POST


Campground Destroy Route    -   /campgrounds/:id
Comment Destroy Route       -   /campgrounds/:id/comments/:comment_id

npm install --save connect-flash

npm install -g nodemon 

nodemon app.js